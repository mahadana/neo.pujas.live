version: "3.7"

services:
  backend:
    build:
      context: ..
      dockerfile: ./backend/Dockerfile
    environment:
      ADMIN_EMAIL: ${ADMIN_EMAIL?}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD?}
      BACKEND_ADMIN_JWT_SECRET: ${BACKEND_ADMIN_JWT_SECRET?}
      BACKEND_JWT_SECRET: ${BACKEND_JWT_SECRET?}
      FRONTEND_URL: ${FRONTEND_URL?}
      HCAPTCHA_SECRET: ${HCAPTCHA_SECRET?}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS?}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME?}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID?}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY?}
      S3_ENDPOINT: ${S3_ENDPOINT?}
      S3_BUCKET: ${S3_BUCKET?}
      SITE_NAME: ${SITE_NAME?}
    restart: unless-stopped
    volumes:
      - uploads:/app/backend/public/uploads

  backup:
    build:
      context: backup
    depends_on:
      - postgres
    environment:
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID?}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY?}
      S3_ENDPOINT: ${S3_ENDPOINT?}
      S3_BUCKET: ${S3_BUCKET?}
    restart: unless-stopped
    volumes:
      - uploads:/uploads

  caddy:
    build:
      context: caddy
    environment:
      FRONTEND_URL: ${FRONTEND_URL?}
      BACKEND_URL: ${BACKEND_URL?}
      PLAUSIBLE_URL: ${PLAUSIBLE_URL?}
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      - ../logs:/logs:ro
      - /opt/chanting:/opt/chanting:ro
      - caddy_data:/data
      - caddy_config:/config

  frontend:
    build:
      context: ..
      dockerfile: ./frontend/Dockerfile
      args:
        BACKEND_URL: ${BACKEND_URL?}
        HCAPTCHA_SITE_KEY: ${HCAPTCHA_SITE_KEY?}
        PLAUSIBLE_DOMAIN_KEY: ${PLAUSIBLE_DOMAIN_KEY?}
        PLAUSIBLE_URL: ${PLAUSIBLE_URL?}
        SITE_NAME: ${SITE_NAME?}
    environment:
      NEXT_PUBLIC_BACKEND_URL: ${BACKEND_URL?}
      NEXT_PUBLIC_HCAPTCHA_SITE_KEY: ${HCAPTCHA_SITE_KEY?}
      NEXT_PUBLIC_PLAUSIBLE_DOMAIN_KEY: ${PLAUSIBLE_DOMAIN_KEY?}
      NEXT_PUBLIC_PLAUSIBLE_URL: ${PLAUSIBLE_URL?}
      NEXT_PUBLIC_SITE_NAME: ${SITE_NAME?}
    restart: unless-stopped

  mail:
    build:
      context: ../mail
    environment:
      MAIL_RELAY_HOST: ${MAIL_RELAY_HOST?}
      MAIL_RELAY_PORT: ${MAIL_RELAY_PORT?}
      MAIL_RELAY_USER: ${MAIL_RELAY_USER?}
      MAIL_RELAY_PASSWORD: ${MAIL_RELAY_PASSWORD?}
    restart: unless-stopped

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: strapi
      POSTGRES_PASSWORD: strapi
      POSTGRES_USER: strapi
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - redis:/var/lib/redis

  worker:
    build:
      context: ..
      dockerfile: ./worker/Dockerfile
    environment:
      ADMIN_EMAIL: ${ADMIN_EMAIL?}
      FRONTEND_URL: ${FRONTEND_URL?}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS?}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME?}
      SITE_NAME: ${SITE_NAME?}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY?}
    restart: unless-stopped
    volumes:
      - ../logs:/app/logs

volumes:
  caddy_config:
  caddy_data:
  postgres:
  redis:
  uploads:
